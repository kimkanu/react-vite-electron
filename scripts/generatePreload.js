import swc from "@swc/core";
import fs from "node:fs";

const parsedHandlersSource = swc.parseFileSync("electron/handlers.cts", {
  syntax: "typescript",
});
const { start, end } =
  parsedHandlersSource.body.find((el) => el.type === "ExportDeclaration")
    .declaration
    .span;
const handlersDeclSource = fs.readFileSync("electron/handlers.cts", "utf-8")
  .slice(start - 1, end);

const PRELOAD_SOURCE = `/* Do not modify this file! It is auto-generated by scripts/generatePreload.js. */

import { contextBridge, ipcRenderer } from "electron";

${handlersDeclSource}
const _handlers = handlers({} as any);

for (const namespace of Object.keys(_handlers)) {
  contextBridge.exposeInMainWorld(
    namespace,
    Object.fromEntries(
      Object.keys(_handlers[namespace as keyof typeof _handlers]).map(
        (name) => [
          name,
          (...args: any[]) => ipcRenderer.invoke(\`\${namespace}:\${name}\`, ...args),
        ],
      ),
    ),
  );
}
`;

fs.writeFileSync("electron/preload.cts", PRELOAD_SOURCE);
